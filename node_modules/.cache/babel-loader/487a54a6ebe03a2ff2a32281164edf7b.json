{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\projects\\\\market\\\\src\\\\components\\\\item-list\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport ItemListDetail from '../item-list-detail';\nimport Loader from '../loader';\nimport ErrorIndicator from '../error/error-indicator';\nimport { connect } from 'react-redux';\nimport { withService } from '../hoc';\nimport { itemLoaded, loading, error } from '../../actions';\n\nconst ItemList = ({\n  marketService,\n  items,\n  load,\n  err,\n  itemLoaded,\n  loading,\n  error\n}) => {\n  useEffect(() => {\n    loading();\n    marketService.getItem().then(data => {\n      itemLoaded(data);\n    }).catch(err => {\n      error(err);\n    }); //itemsLoaded was generated by mapDispatchToProps for dispatching in store data from service\n  }, []);\n\n  if (load) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  if (err) {\n    return React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, items.map(i => React.createElement(\"li\", {\n    key: i.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ItemListDetail, {\n    item: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = ({\n  items,\n  load,\n  err\n}) => {\n  return {\n    items,\n    load,\n    err\n  };\n};\n\nconst mapDispatchToProps = {\n  itemLoaded,\n  loading,\n  error\n}; //This object is shorthened implementation of fucntion bindActionCrators\n\nconst childConnect = connect(mapStateToProps, mapDispatchToProps)(ItemList); //firstly, wrapp item-list component in context-function for connecting with redux;\n\nexport default withService()(childConnect); // and then wrapp wrapped component in hoc for connecting with service","map":{"version":3,"sources":["D:\\JS\\projects\\market\\src\\components\\item-list\\index.js"],"names":["React","useEffect","ItemListDetail","Loader","ErrorIndicator","connect","withService","itemLoaded","loading","error","ItemList","marketService","items","load","err","getItem","then","data","catch","map","i","id","mapStateToProps","mapDispatchToProps","childConnect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAAQC,UAAR,EAAoBC,OAApB,EAA6BC,KAA7B,QAAyC,eAAzC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA,GAA7B;AAAkCP,EAAAA,UAAlC;AAA8CC,EAAAA,OAA9C;AAAuDC,EAAAA;AAAvD,CAAD,KAAmE;AAEhFR,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO;AACPG,IAAAA,aAAa,CAACI,OAAd,GACCC,IADD,CACOC,IAAD,IAAQ;AACVV,MAAAA,UAAU,CAACU,IAAD,CAAV;AACH,KAHD,EAICC,KAJD,CAIQJ,GAAD,IAAO;AAAEL,MAAAA,KAAK,CAACK,GAAD,CAAL;AAAW,KAJ3B,EAFU,CAQV;AACH,GATQ,EASN,EATM,CAAT;;AAWA,MAAGD,IAAH,EAAQ;AACJ,WAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAGC,GAAH,EAAO;AACH,WAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,KAAK,CAACO,GAAN,CAAUC,CAAC,IACP;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CADJ;AAYH,CA/BD;;AAiCA,MAAME,eAAe,GAAG,CAAC;AAACV,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAAwB;AAC5C,SAAO;AAACF,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAAP;AACH,CAFD;;AAGA,MAAMS,kBAAkB,GAAG;AACvBhB,EAAAA,UADuB;AACXC,EAAAA,OADW;AACFC,EAAAA;AADE,CAA3B,C,CAGA;;AACA,MAAMe,YAAY,GAAGnB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,QAA7C,CAArB,C,CACA;;AACA,eAAeJ,WAAW,GAAGkB,YAAH,CAA1B,C,CACA","sourcesContent":["import React, {useEffect} from 'react';\r\nimport ItemListDetail from '../item-list-detail';\r\n\r\nimport Loader from '../loader'\r\nimport ErrorIndicator from '../error/error-indicator';\r\nimport { connect } from 'react-redux';\r\nimport { withService } from '../hoc';\r\nimport {itemLoaded, loading, error} from '../../actions'\r\n\r\nconst ItemList = ({marketService, items, load, err, itemLoaded, loading, error}) => {\r\n\r\n    useEffect(()=>{\r\n        loading()\r\n        marketService.getItem()\r\n        .then((data)=>{ \r\n            itemLoaded(data)\r\n        })\r\n        .catch((err)=>{ error(err)})\r\n      \r\n        //itemsLoaded was generated by mapDispatchToProps for dispatching in store data from service\r\n    }, [])\r\n    \r\n    if(load){\r\n        return <Loader/>\r\n    }\r\n    if(err){\r\n        return <ErrorIndicator/>\r\n    }\r\n    return(\r\n        <ul>\r\n            {\r\n                items.map(i=>(\r\n                    <li key={i.id}>\r\n                        <ItemListDetail item={i}/>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n  \r\n}\r\n\r\nconst mapStateToProps = ({items, load, err}) => { \r\n    return {items, load, err};\r\n}\r\nconst mapDispatchToProps = {\r\n    itemLoaded, loading, error\r\n};\r\n//This object is shorthened implementation of fucntion bindActionCrators\r\nconst childConnect = connect(mapStateToProps, mapDispatchToProps)(ItemList);\r\n//firstly, wrapp item-list component in context-function for connecting with redux;\r\nexport default withService()(childConnect);\r\n// and then wrapp wrapped component in hoc for connecting with service"]},"metadata":{},"sourceType":"module"}