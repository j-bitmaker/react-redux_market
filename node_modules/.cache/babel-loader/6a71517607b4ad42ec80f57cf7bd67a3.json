{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\projects\\\\market\\\\src\\\\components\\\\item-list\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport ItemListDetail from '../item-list-detail';\nimport { connect } from 'react-redux';\nimport { withService } from '../hoc';\nimport { itemLoaded } from '../../actions';\nimport { bindActionCreators } from 'redux';\n\nconst ItemList = ({\n  marketService,\n  items,\n  itemLoaded\n}) => {\n  useEffect(() => {\n    const data = marketService.getItem();\n    itemLoaded(data); //itemsLoaded was generated by mapDispatchToProps for dispatching in store data from service\n  }, []);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, items.map(i => React.createElement(\"li\", {\n    key: i.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ItemListDetail, {\n    item: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = ({\n  items\n}) => {\n  return {\n    items\n  };\n};\n\nconst mapDispatchToProps = {\n  itemLoaded\n}; //This object is shorthened implementation of fucntion Bind\n\nconst childConnect = connect(mapStateToProps, mapDispatchToProps)(ItemList); //firstly, wrapp item-list component in context-function for connecting with redux;\n\nexport default withService()(childConnect); // and then wrapp wrapped component in hoc for connecting with service","map":{"version":3,"sources":["D:\\JS\\projects\\market\\src\\components\\item-list\\index.js"],"names":["React","useEffect","ItemListDetail","connect","withService","itemLoaded","bindActionCreators","ItemList","marketService","items","data","getItem","map","i","id","mapStateToProps","mapDispatchToProps","childConnect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,KAAhB;AAAuBJ,EAAAA;AAAvB,CAAD,KAAwC;AACrDJ,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,IAAI,GAAGF,aAAa,CAACG,OAAd,EAAb;AACAN,IAAAA,UAAU,CAACK,IAAD,CAAV,CAFU,CAGV;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,KAAK,CAACG,GAAN,CAAUC,CAAC,IACP;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CADJ;AAYH,CAnBD;;AAqBA,MAAME,eAAe,GAAG,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAa;AACjC,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CAFD;;AAGA,MAAMO,kBAAkB,GAAG;AACvBX,EAAAA;AADuB,CAA3B,C,CAGA;;AACA,MAAMY,YAAY,GAAGd,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAArB,C,CACA;;AACA,eAAeH,WAAW,GAAGa,YAAH,CAA1B,C,CACA","sourcesContent":["import React, {useEffect} from 'react';\r\nimport ItemListDetail from '../item-list-detail';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withService } from '../hoc';\r\nimport {itemLoaded} from '../../actions'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst ItemList = ({marketService, items, itemLoaded}) => {\r\n    useEffect(()=>{\r\n        const data = marketService.getItem();\r\n        itemLoaded(data)\r\n        //itemsLoaded was generated by mapDispatchToProps for dispatching in store data from service\r\n    }, [])\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                items.map(i=>(\r\n                    <li key={i.id}>\r\n                        <ItemListDetail item={i}/>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n  \r\n}\r\n\r\nconst mapStateToProps = ({items}) => { \r\n    return {items};\r\n}\r\nconst mapDispatchToProps = {\r\n    itemLoaded\r\n};\r\n//This object is shorthened implementation of fucntion Bind\r\nconst childConnect = connect(mapStateToProps, mapDispatchToProps)(ItemList);\r\n//firstly, wrapp item-list component in context-function for connecting with redux;\r\nexport default withService()(childConnect);\r\n// and then wrapp wrapped component in hoc for connecting with service"]},"metadata":{},"sourceType":"module"}