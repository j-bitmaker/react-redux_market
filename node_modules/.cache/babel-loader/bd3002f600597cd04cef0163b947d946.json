{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\projects\\\\market\\\\src\\\\components\\\\item-list\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport ItemListDetail from '../item-list-detail';\nimport { connect } from 'react-redux';\nimport { withService } from '../hoc';\nimport { itemLoaded } from '../../actions';\n\nconst ItemList = ({\n  marketService,\n  items,\n  itemsLoaded\n}) => {\n  useEffect(() => {\n    const data = marketService.getItem();\n    itemsLoaded(data); //itemsLoaded was generated by mapDispatchToProps for dispatching in store data from service\n  }, []);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, items.map(i => React.createElement(\"li\", {\n    key: i.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ItemListDetail, {\n    item: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = ({\n  items\n}) => {\n  return {\n    items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    itemsLoaded: ite => {\n      dispatch({\n        type: \"ITEM_LOADED\",\n        payload: nextItems\n      });\n    }\n  };\n};\n\nconst childConnect = connect(mapStateToProps, mapDispatchToProps)(ItemList); //firstly, wrapp item-list component in context-function for connecting with redux;\n\nexport default withService()(childConnect); // and then wrapp wrapped component in hoc for connecting with service","map":{"version":3,"sources":["D:\\JS\\projects\\market\\src\\components\\item-list\\index.js"],"names":["React","useEffect","ItemListDetail","connect","withService","itemLoaded","ItemList","marketService","items","itemsLoaded","data","getItem","map","i","id","mapStateToProps","mapDispatchToProps","dispatch","ite","type","payload","nextItems","childConnect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAAQC,UAAR,QAAyB,eAAzB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AACtDR,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,IAAI,GAAGH,aAAa,CAACI,OAAd,EAAb;AACAF,IAAAA,WAAW,CAACC,IAAD,CAAX,CAFU,CAGV;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,KAAK,CAACI,GAAN,CAAUC,CAAC,IACP;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CADJ;AAYH,CAnBD;;AAqBA,MAAME,eAAe,GAAG,CAAC;AAACP,EAAAA;AAAD,CAAD,KAAa;AACjC,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CAFD;;AAGA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAa;AACpC,SAAO;AACHR,IAAAA,WAAW,EAAGS,GAAD,IAAQ;AACjBD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEC;AAFJ,OAAD,CAAR;AAIH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMC,YAAY,GAAGnB,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAArB,C,CACA;;AACA,eAAeF,WAAW,GAAGkB,YAAH,CAA1B,C,CACA","sourcesContent":["import React, {useEffect} from 'react';\r\nimport ItemListDetail from '../item-list-detail';\r\nimport { connect } from 'react-redux';\r\nimport { withService } from '../hoc';\r\nimport {itemLoaded} from '../../actions'\r\nconst ItemList = ({marketService, items, itemsLoaded}) => {\r\n    useEffect(()=>{\r\n        const data = marketService.getItem();\r\n        itemsLoaded(data)\r\n        //itemsLoaded was generated by mapDispatchToProps for dispatching in store data from service\r\n    }, [])\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                items.map(i=>(\r\n                    <li key={i.id}>\r\n                        <ItemListDetail item={i}/>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n  \r\n}\r\n\r\nconst mapStateToProps = ({items}) => { \r\n    return {items};\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        itemsLoaded: (ite) =>{\r\n            dispatch({\r\n                type: \"ITEM_LOADED\",\r\n                payload: nextItems\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nconst childConnect = connect(mapStateToProps, mapDispatchToProps)(ItemList);\r\n//firstly, wrapp item-list component in context-function for connecting with redux;\r\nexport default withService()(childConnect);\r\n// and then wrapp wrapped component in hoc for connecting with service"]},"metadata":{},"sourceType":"module"}